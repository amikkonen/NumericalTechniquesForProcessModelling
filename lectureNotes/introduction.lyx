#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\numberwithin{equation}{section}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\paperheight 40cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Introduction
\begin_inset CommandInset label
LatexCommand label
name "sec:Introduction"

\end_inset


\end_layout

\begin_layout Standard
This section given an overview of some of the key concepts of CFD with very
 little theoretical detail.
 Most subject will be considered in more detail later.
\end_layout

\begin_layout Standard
Computational fluid dynamics (CFD) offers great flexibility to an engineer
 and can offer valuable insight into complex problems.
 Industrial machines often have a complex geometry well beyond the scope
 of analytical methods.
 For a complex phenomena in industrial scale, such as airplane or power
 plant design, CFD is often the only viable option as a full scale experiment
 would be too expensive.
 
\end_layout

\begin_layout Standard
A word of warning is, however, in order.
\end_layout

\begin_layout Standard
The acronym of Computational Fluid Dynamics, CFD, has many interpretation:
 Colorful Fluid Dynamics, Colors For Directors, Cleverly Forged Data, etc.
 As usual, there is some truth in the joke.
 It is very easy to produce good looking false results with CFD.
 Learning how to use CFD programs well enough to produce pretty videos may
 give false confidence.
 With few exceptions, CFD programs need an expert user to be reliable.
 
\end_layout

\begin_layout Subsection
Mesh basics
\end_layout

\begin_layout Standard
Computational fluid dynamics (CFD) studies fluid flow using computers to
 solve the numerical approximations of often complex problems.
 There are many ways to build the approximations, but in this text we will
 study exclusively the finite volume method (FVM).
 In FVM, we divide the calculation domain into small volumes called cells.
 The cells form a mesh that fills the computational domain, see Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Engine"

\end_inset

.
 A typical mesh contains hundreds of thousands or millions of cells.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/CmefeCFDmoteur.png
	lyxscale 20
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Engine mesh
\begin_inset CommandInset label
LatexCommand label
name "fig:Engine"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wiki:moto"
literal "true"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Mesh might be the most important concept in the finite volume method.
 Each cell form a control volume that is very similar to the control volume
 used in analytical fluid dynamics.
 The main difference is that in the 
\bar under
finite
\bar default
 volume method the control volume has a finite size.
 When solving differential equations analytically, we would typically let
 the control volume be infinitesimally small.
 
\end_layout

\begin_layout Standard
In the finite volume method, we assume that a single value of a field variable,
 say pressure, is enough to represent the value of that field inside the
 whole cell.
 In other words, the original continuous field is approximated with a discrete,
 non-continuous one.
 
\end_layout

\begin_layout Standard
As the mathematical concepts may quickly become a little confusing without
 a concrete example, let us consider a fully developed turbulent mean velocity
 profile in a pipe, see Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Turbulent-flow-velocity"

\end_inset

.
 The velocity distribution is, of course, continuous.
 Discretizing the profile with ten cells gives the discretized profile in
 Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Turbulent-flow-velocity"

\end_inset

.
 This is analogous to using a discretized numerical solution.
 In the example case with ten equally sized cells, using the finite volume
 method would probably fail miserably as the mesh is unable to represent
 the fast change in the velocity profile near the wall.
 We would need smaller cells near the wall.
 In real use cases, the mesh is usually refined near walls and other regions
 where fast changes happen, see Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Structured-and-unstructured"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/wallProfile10.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Fully developed turbulent mean velocity profile in a pipe
\begin_inset CommandInset label
LatexCommand label
name "fig:Turbulent-flow-velocity"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The guiding principle of meshing is to have small cells where fast change
 occurs and larger cells elsewhere to avoid unnecessary computational cost.
 In addition, we want our cells to have regular shapes and the cell face
 normals to align with stream lines.
 This allows for better numerical accuracy.
 
\end_layout

\begin_layout Standard
In Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Structured-and-unstructured"

\end_inset

 we see two main strategies to achieve these goals.
 On the left, we have a structured mesh.
 The mesh is pieced together solely from morphed rectangles.
 For simple shapes, this strategy often lead to high quality meshes if enough
 effort is spend on the process.
 
\end_layout

\begin_layout Standard
On the right, in Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Structured-and-unstructured"

\end_inset

, we see an unstructured mesh.
 Unstructured meshes have more chaotic structure than structured ones.
 As a rule of a thump, one can usually get a better mesh using structured
 meshes if enough effort is spend in the meshing process.
 Unstructured meshes are, however, a lot easier and faster to generate.
 Structured meshes have to be build manually but for unstructured meshes
 there are many automated algorithms.
 For complex shapes, unstructured meshes are practically the only option.
 The two strategies can be combined.
 One could, for example, use a structured mesh near the wing in Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Structured-and-unstructured"

\end_inset

 and unstructured one elsewhere.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/meshStructural.png
	lyxscale 5
	width 45text%

\end_inset


\begin_inset space \hspace{}
\length 1cm
\end_inset


\begin_inset Graphics
	filename figures/introduction/meshUnStructural.png
	lyxscale 5
	width 45text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Structured and unstructured (low quality) meshes of a 2D wing
\begin_inset CommandInset label
LatexCommand label
name "fig:Structured-and-unstructured"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The cells in meshes may have an arbitrary shape.
 Simple, regular shapes like the ones in Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Cell-types"

\end_inset

 are, however, preferred for numerical accuracy.
 In the finite volume method the cell shape and aliment to stream lines
 is one of the most important factor for reliable solution.
 In practice, however, it is often more convenient to use a brute force
 approach.
 Even low quality cells give good results if small enough cells are used.
 The computational expense limits this approach to meshing.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/CellTypes.png
	lyxscale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Cell types
\begin_inset CommandInset label
LatexCommand label
name "fig:Cell-types"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now that we have learned some basics of meshes, let us study the other aspects
 of CFD as well.
\end_layout

\begin_layout Subsection
Steps of CFD
\end_layout

\begin_layout Standard
We started our discussion about CFD with the basics of meshing.
 Now we will quickly familiarize ourselves with the other steps of CFD.
\end_layout

\begin_layout Standard
The process of CFD is usually divided in three parts:
\end_layout

\begin_layout Itemize
Preprocessing
\end_layout

\begin_layout Itemize
Solver
\end_layout

\begin_layout Itemize
Post-processing
\end_layout

\begin_layout Standard
Simply put, preprocessing is everything that is done before opening the
 actual CFD solver programs.
 Solver part happens in the CFD solver.
 Post-processing is everything that happens after you close the actual solver.
 It is common to use different programs for each of these tasks.
\end_layout

\begin_layout Subsubsection
Preprocessing
\end_layout

\begin_layout Standard
Preprocessing consist of two main parts: CAD and meshing.
 A CFD solver operates in a mesh.
 Mesh is usually based on a geometry created in a CAD program.
 Some meshing strategies do not need a CAD geometry, but in general the
 two are closely linked.
 
\end_layout

\begin_layout Standard
In order to make a mesh with a suitable level of detail, a CAD model with
 a suitable level of detail is needed.
 The suitable level of detail depends on a case.
 The main idea is that the CAD geometry and the mesh should contain the
 features that are important for the problem at hand and nothing else.
 
\end_layout

\begin_layout Standard
The choice of level of detail in the model is far from easy.
 Experience and intuition are needed.
 If possible, it's good practice to look up a scientific paper on a similar
 case or ask from someone with experience.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/motoWinnerMotors.jpg
	lyxscale 5
	height 4cm

\end_inset


\begin_inset space \hspace{}
\length 1cm
\end_inset


\begin_inset Graphics
	filename figures/introduction/motoCAD.png
	lyxscale 20
	height 4cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Geometry simplification
\begin_inset CommandInset citation
LatexCommand cite
key "motoWinnerMotors"
literal "true"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Geometry-simplification-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Geometry-simplification-1"

\end_inset

 we see a photo of a motorcycle and a simplified CAD model of the motorcycle
 surface.
 If we are modeling the flow outside the motorcycle, we only want to include
 the outer shell of the motorcycle in our CAD model.
 Many details on the outer surface may also be ignored.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/motorbikeDomain.png
	lyxscale 20
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Calculation domain
\begin_inset CommandInset label
LatexCommand label
name "fig:Calculation-domain"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is important to understand that if we want to solve the air flow outside
 the motorcycle, we won't be modeling the motorcycle itself.
 Our model will consist of the air around the motorcycle.
 In Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Calculation-domain"

\end_inset

 we see a typical calculation domain for an outside flow of a vehicle.
 We need to be able to solve all the important flow phenomena and therefore
 our domain must be large enough to contain them.
 
\end_layout

\begin_layout Standard
The flow in front of the motorcycle is mostly unaffected by the motorcycle
 expect for a short distance in front of the motorcycle.
 Therefore, we only model a small amount of air in front of the motorcycle.
 
\end_layout

\begin_layout Standard
The motorcycle will create a long wake behind it.
 The wake is important for the aerodynamics of the motorcycle and we want
 to include it in our model.
 Therefore, a large amount of air is modeled behind the motorcycle.
 
\end_layout

\begin_layout Standard
The air flow on top of the bike and to it sides will be mostly unaffected
 by the motorcycle until the flow reaches the wake region.
 The width and height must be suitably sized to contain the wake.
\end_layout

\begin_layout Standard
Modeling a unnecessarily large domain is computationally expensive and will
 force us to use larger cells.
 Again, experience and understanding of the flow phenomena is needed.
 
\end_layout

\begin_layout Standard
Setting boundary conditions is usually considered as part of the solver
 setup, see Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Boundary-contions"

\end_inset

.
 However, the used boundary conditions directly affect the used domain and
 mesh.
 It is quite common that there is only a rough knowledge of the boundary
 condition.
 It could, for example, be that the total inlet mass flow is known but the
 velocity profile is not known.
 In such cases it is convenient to extend the inlet region far upstream
 to allow the velocity profile to develop before it reaches the region of
 interest.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/motorbikeSurfaceMesh_org2.png
	lyxscale 20
	width 100col%
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Surface mesh (low quality) 
\begin_inset CommandInset label
LatexCommand label
name "fig:Surface-mesh-details"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The mesh must have sufficiently small cells to accurately represent the
 modeled phenomena.
 In Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Surface-mesh-details"

\end_inset

 there are some obvious problems.
 Half of the disk brake, for example, has been cut out of the simulation
 due to too coarse a mesh.
\end_layout

\begin_layout Standard
Mesh quality is one of the most important parts of practical CFD.
 Too coarse a mesh and the model won't be able to represent reality.
 Too fine a mesh and the required computational resources grow too large.
 Unfortunately, there is no way to truly know if the mesh is fine enough
 in a complex case.
 There are, however, best practices.
\end_layout

\begin_layout Standard
A simple and effective method is just to look at the mesh.
 There might be some obvious errors there.
 Most CFD programs and meshing tools are also able to report the mesh quality.
 
\end_layout

\begin_layout Standard
After the solution is ready, it's a good practice to, again, have a critical
 look at the results.
 Sometimes there is something obviously wrong there.
 You may also notice that your initial assessment of the flow was wrong
 and that you have placed small cells in wrong places.
 
\end_layout

\begin_layout Standard
The closest one can get to assessing the mesh quality is to run a formal
 mesh independency test.
 The basic idea of a mesh independency test is to run a series of simulations
 with unceasingly fine meshes and see when the results won't change.
 An example of mesh refinement is shown in Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mesh-refinement"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/meshRefinement/compination.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mesh refinement
\begin_inset CommandInset label
LatexCommand label
name "fig:Mesh-refinement"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Refining the mesh with the same meshing strategy, as is done in Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mesh-refinement"

\end_inset

, is relatively simple as the meshing parameters can be easily adjusted.
 The results from the coarser meshes can also be used as initial values
 to speed up the process.
 
\end_layout

\begin_layout Standard
A formal mesh independency test would include many different meshing strategies.
 Such a test can be very time consuming and often impractical.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
We have been discussing the mesh quality for a while now.
 How does one know if the mesh is good enough? Unfortunately, one can never
 truly know.
 In most cases, the best we can get is an educated guess.
 There are many ways to recognize a low quality mesh but no way to recognize
 a high quality mesh.
 
\end_layout

\begin_layout Plain Layout
The first thing to do with any CFD solution is to have critical look at
 the solution on general.
 Is there something obviously unrealistic there? Negative temperature or
 pressure would be obvious indicators of problems.
 Or maybe you can see large 
\begin_inset Quotes eld
\end_inset

pixels
\begin_inset Quotes erd
\end_inset

 with large steps in say, temperature, between neighboring cells.
 This would indicate a too coarse mesh.
 
\end_layout

\begin_layout Plain Layout
A bit more formal method for mesh quality study is the grid independency
 test.
 If the mesh is fine (small cells) enough, the solution does not change
 much with further refinement.
 See Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mesh-refinement"

\end_inset

 for an example of refinement process.
 In practice, a full grid independency test might be infeasible due to high
 computational cost.
 To be fully formal, more than one meshing strategy should be used.
 
\end_layout

\begin_layout Plain Layout
To truly know if a simulation is readable, is to test it with experimental
 data or known analytical solution.
 Usually this is only possible for simple test cases.
 If the test case and the real application are similar enough, it's reasonable
 to assume that if the model works for the test case it will also work for
 the real case.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Solver
\end_layout

\begin_layout Standard
Understanding a CFD solver requires much more theory than the basics of
 preprocessing and post-processing.
 We will therefore only give a very short introduction here.
 
\end_layout

\begin_layout Standard
A solver set up contains all the physics and numerical method definitions
 of the problem.
 At this stage, we choose 
\end_layout

\begin_layout Itemize
steady state or unsteady simulation
\end_layout

\begin_layout Itemize
compressible flow or incompressible flow
\end_layout

\begin_layout Itemize
boundary conditions 
\end_layout

\begin_layout Itemize
fluid properties
\end_layout

\begin_layout Itemize
turbulence model
\end_layout

\begin_layout Itemize
additional models like chemistry or radiation
\end_layout

\begin_layout Standard
Inside the solution domain, the physical models describe the flow.
 At the boundary, however, additional information is needed.
 Typical boundary conditions are inlet velocity profiles and pressure levels.
 
\end_layout

\begin_layout Standard
Mathematical concepts, such as symmetry, are also often used to save computation
al results.
 Using symmetry requires understanding of the phenomena.
 For example, the wakes resulting from a symmetrical obstacle are not symmetrica
l.
 
\end_layout

\begin_layout Standard
See Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Boundary-contions"

\end_inset

 for examples of boundary conditions.
 The mathematical definitions will be given later.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/boundaryConditions.png
	lyxscale 20
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Boundary conditions
\begin_inset CommandInset label
LatexCommand label
name "fig:Boundary-contions"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In general, fluid flow problems do not have a steady state solution.
 Some low Reynolds number flows are truly steady state but usually a steady
 state solution is a mathematical artifact, that hopefully represent the
 mean flow.
 However, the mean properties are often what we are interested in.
 Solving the fine details would just cost more in computational time and
 make post-processing more difficult.
 With suitable choices of turbulence model and geometry simplification one
 may get a useful steady state solution of a complex flow.
 
\end_layout

\begin_layout Standard
An example is the well-known test case by Pitz and Daily 
\begin_inset CommandInset citation
LatexCommand cite
key "pitzDaily1981"
literal "true"

\end_inset

, see Figs.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Unsteady-solution"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Steady-solution"

\end_inset

.
 The flow is turbulent, but the modeled flow still reaches a steady state
 solution.
 
\end_layout

\begin_layout Standard
Fluid flows are highly nonlinear by nature.
 In the context of CFD, this mean that we need to an iterative process to
 produce a result.
 Iterations are needed for both steady and transient problems.
 As both the time steps and iterations of a steady state solution are based
 on previously calculated solution, they are mathematically similar.
 From Figs.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Unsteady-solution"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Steady-solution"

\end_inset

 we can see the similarity.
 
\end_layout

\begin_layout Standard
Transient simulations are done when we are interested in the changes of
 flow field in time or when steady state solution is not possible.
 Many flows don't have steady state solutions and unsteady solution is the
 only choice.
 Due to the similarity of the time stepping and iterations, transient solvers
 are also used even if we are only interested steady state solution.
 They are usually more stable than steady state solvers and with long time
 steps they may have similar convergence rates.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/unsteady/combination.png
	lyxscale 20
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Transient solution
\begin_inset CommandInset label
LatexCommand label
name "fig:Unsteady-solution"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/steady/combination.png
	lyxscale 20
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Steady solution
\begin_inset CommandInset label
LatexCommand label
name "fig:Steady-solution"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
During a solver set up, it is important to set up some monitors for your
 simulation.
 Monitors of the best kind are the physical values you are interested in.
 In case of a heat exchanger, the values would often be a mean heat transfer
 coefficient and pressure drop.
 It is often illustrative to plot those values during iterations or time
 steps to monitor convergence.
 In the example in Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pseudo-convergence-of"

\end_inset

 we have a steady state simulation of a heat exchanger.
 As is typical of complex flows, the steady state simulation never converges,
 but oscillates around a mean.
 This is often good enough.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/introduction/pseudoConvergence.pdf
	lyxscale 20
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pseudo convergence of steady state solution
\begin_inset CommandInset label
LatexCommand label
name "fig:Pseudo-convergence-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Most CFD programs use a mathematical concept called residual as a convergence
 criteria.
 It is near impossible to know when the solution is good enough from residual
 alone and it is recommended to always use some physical quantity instead.
 
\end_layout

\begin_layout Subsubsection
Post-processing
\end_layout

\begin_layout Standard
Post processing is the step where the actual value of the simulation is
 produced.
 It is critical to not only be able to produce high quality simulations,
 but to also report the results.
 
\end_layout

\begin_layout Standard
A typical CFD simulation produces gigabytes of detailed data.
 Typically, only one or two integral values are truly of interest.
 In case of the motorcycle example, the interesting value could be the drag
 force.
  
\end_layout

\begin_layout Standard
The detailed information is, however, useful for developing understanding
 of the flow.
 It's sometimes easy to spot mistakes from the solution by just looking
 at the field values.
 Similarly, it is sometimes very useful to study the qualitative behavior
 of the simulation.
 It may give insight to the phenomena that is not available from measurements.
 See, for example, the heat exchanger in Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Temperature-and-velocity"

\end_inset

.
 It would be next to impossible the measure the velocity and temperature
 profiles inside the device and visualize them.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/else/kansi2.jpeg
	lyxscale 20
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Temperature and velocity fields at one time step
\begin_inset CommandInset citation
LatexCommand cite
key "kansi"
literal "true"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Temperature-and-velocity"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Colorful figures and videos are also great for marketing and explaining
 your results.
 
\end_layout

\end_body
\end_document
