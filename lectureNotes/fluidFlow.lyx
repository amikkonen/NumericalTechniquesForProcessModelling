#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\numberwithin{equation}{section}
\usepackage{siunitx}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\paperheight 40cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Fluid flow
\begin_inset CommandInset label
LatexCommand label
name "sec:Fluid-flow"

\end_inset


\end_layout

\begin_layout Standard

\shape italic
Some of the topics discussed in this section may be found from Versteeg
 and Malalasekara 2007, Chapter 6.
 
\begin_inset CommandInset citation
LatexCommand cite
key "versteeg2007"
literal "true"

\end_inset


\end_layout

\begin_layout Standard
In this section, we learn the basics of solution methods for practical fluid
 flow problems.
 In the previous section we studied diffusion and advection problems in
 fine enough detail to implement our own solvers.
 Unfortunately, such a detailed presentation is outside our time limits
 here.
 Most of the methods discussed for diffusion and advection, however, are
 directly generalizable to Navier-Stokes equations.
 
\end_layout

\begin_layout Standard
The main goal of this section is to give a student enough understanding
 about the solution methods to read the manuals of software packages.
\end_layout

\begin_layout Standard
This section considers a single phase, non-reacting, incompressible and
 compressible flows without turbulence models.
 
\end_layout

\begin_layout Subsection
Notations
\end_layout

\begin_layout Standard
During this section, we move from the one dimensional problems to three
 dimensions.
 As the full sets of equations quickly become cumbersome, we will be using
 vector notations.
 Some of the equations are also collected into the Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Navier-Stokes-with-tensor"

\end_inset

 using tensor notations.
 A quick introduction to the notations is given here.
\end_layout

\begin_layout Paragraph
Gradient, 
\begin_inset Formula $\nabla\boldsymbol{u}$
\end_inset


\end_layout

\begin_layout Standard
A gradient tells the rate of change of the variable.
 Usually the change is relative to spacial coordinates.
 A gradient is often taken from both scalar and vector values.
 A familiar example is the heat flux from Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:1dHeat"

\end_inset

.
 Heat flux depends on the rate of change of temperature.
\end_layout

\begin_layout Standard
For a scalar 
\begin_inset Formula $\phi$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathrm{grad(\phi)=\nabla\phi=\partial_{i}\phi=\frac{\partial\phi}{\partial x_{i}}}=\left(\frac{\partial\phi}{\partial x},\frac{\partial\phi}{\partial y},\frac{\partial\phi}{\partial z}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
For a vector 
\begin_inset Formula $\boldsymbol{u}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathrm{grad(\boldsymbol{u})=\nabla\boldsymbol{u}=\partial_{i}u_{j}=\frac{\partial u_{j}}{\partial x_{i}}}=\begin{pmatrix}\frac{\partial u_{1}}{\partial x} & \frac{\partial u_{2}}{\partial x} & \frac{\partial u_{3}}{\partial x}\\
\frac{\partial u_{1}}{\partial y} & \frac{\partial u_{2}}{\partial y} & \frac{\partial u_{3}}{\partial y}\\
\frac{\partial u_{1}}{\partial z} & \frac{\partial u_{2}}{\partial z} & \frac{\partial u_{3}}{\partial z}
\end{pmatrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
A gradient from a scalar produces a vector.
 A gradient of vector produces a tensor.
\end_layout

\begin_layout Paragraph
Divergence, 
\begin_inset Formula $\nabla\cdot\boldsymbol{u}$
\end_inset


\end_layout

\begin_layout Standard
Divergence is one of the most common operators in fluid dynamics.
 In the context of the finite volume method, it tells the difference of
 fluxes entering and leaving the control volume.
 For example, in the one dimensional heat conduction in Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:1dHeat"

\end_inset

, we take the divergence of heat fluxes.
 
\end_layout

\begin_layout Standard
Mathematically, divergence can be though as a dot product of gradient operator
 and the vector
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathrm{div}\mathbf{u}=\frac{\partial u_{i}}{\partial x_{i}}=\nabla\cdot\mathbf{u}=\left(\frac{\partial}{\partial x},\frac{\partial}{\partial y},\frac{\partial}{\partial z}\right)\cdot\left(u,v,w\right)=\frac{\partial u_{1}}{\partial x}+\frac{\partial u_{2}}{\partial y}+\frac{\partial u_{3}}{\partial z}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Divergence of a vector results in a scalar.
\end_layout

\begin_layout Paragraph
Laplacian
\end_layout

\begin_layout Standard
Laplacian is a common operator in fluid dynamics because it closely relates
 to diffusion.
 Laplacian is a divergence of gradient
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathrm{laplacian}(\mathbf{u})=\Delta\mathbf{u}=\nabla^{2}\mathbf{u}=\nabla\cdot\nabla\mathbf{u}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We have given this operator a name because it is so common.
 For example, in the one dimensional heat equation, Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:1dHeat"

\end_inset

, we have a Laplacian.
 Inside computer codes, Laplacian is usually also given a special treatment
 for speed and readability.
\end_layout

\begin_layout Subsection
Finite volume method more mathematically
\end_layout

\begin_layout Standard
In the previous sections, we avoided math when using the finite volume method.
 We derived our discretized equations from balance equations for a control
 volume.
 We did this for simplicity, and because we will not have time to derive
 the discretized equations for the fluid flow because of time limits.
 
\end_layout

\begin_layout Standard
We, however, need to be able to recognize the terms and have a rough understandi
ng on how to discretize them.
 Here will will work through one dimensional examples.
\end_layout

\begin_layout Paragraph
Divergence, 
\begin_inset Formula $\nabla\cdot\boldsymbol{u}$
\end_inset


\end_layout

\begin_layout Standard
The formal finite volume discretization starts with taking a volume integral
 of the function.
 In one dimension, divergence is simply a gradient
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\int_{V}\frac{\mathrm{d}u}{\mathrm{d}x}\mathrm{d}V
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The volume integral is then changed to surface integral using the Gauss
 divergence theorem.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\int_{V}\frac{\mathrm{d}u}{\mathrm{d}x}\mathrm{d}V=\int_{S}\boldsymbol{n}\cdot\boldsymbol{u}\mathrm{d}S
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\boldsymbol{n}$
\end_inset

 is a surface normal unit vector.
 The surface integral can further be divided as a sum operation for all
 the faces
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\int_{V}\frac{\mathrm{d}u}{\mathrm{d}x}\mathrm{d}V=\int_{S}\boldsymbol{n}\cdot\frac{\mathrm{d}p}{\mathrm{d}x}\mathrm{d}S=\sum\boldsymbol{n}\cdot\boldsymbol{u}A
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For a one dimensional case this results in
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\int_{V}\frac{\mathrm{d}u}{\mathrm{d}x}\mathrm{d}V=\int_{S}\boldsymbol{n}\cdot\frac{\mathrm{d}u}{\mathrm{d}x}\mathrm{d}S=\sum\boldsymbol{n}\cdot uA=u_{e}A_{e}-u_{w}A_{w}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
which is similar to what we have been using this far.
 A three dimensional case would simply add more faces and terms.
\end_layout

\begin_layout Paragraph
Gradient, 
\begin_inset Formula $\nabla\boldsymbol{u}$
\end_inset


\end_layout

\begin_layout Standard
In one dimensions, a gradient is the same thing as a divergence.
 The analysis applies.
\end_layout

\begin_layout Paragraph
Laplacian
\end_layout

\begin_layout Standard
The Laplacian is a combination of divergence and gradient.
 A worked example in one dimension is already given in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Same-thing-in"

\end_inset

 for one dimensional heat conduction.
\end_layout

\begin_layout Subsection
Governing equations
\end_layout

\begin_layout Standard
The governing equations are understood in a broad sense here to include
 the transport equations and fluid properties.
 We only discuss the equations here, the solution methods will be discussed
 later.
\begin_inset Note Note
status open

\begin_layout Subsubsection
Coupled equations
\end_layout

\begin_layout Plain Layout
Previously, we only considered one equation at a time, the energy equation.
 For a more general fluid flow problem we, however, have multiple equation
 to solve.
 For incompressible flow we have three momentum equation and the continuity
 equation.
 For compressible flow we also have the energy equation and equation of
 state.
 
\end_layout

\begin_layout Plain Layout
All of these equation must be valid simultaneously.
 Usually, one unknown variable, say the x-component of velocity vector,
 is solved from one equation and then the next unknown from the next one.
 This often requires a lot of iteration.
 
\end_layout

\begin_layout Plain Layout
All the equations can also be solved simultaneously by building them all
 in a single matrix.
 The non-linear terms still require iteration.
 This kind of solution often requires much less iterations to converge,
 but is more complicated.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Continuity equation
\end_layout

\begin_layout Standard
Mass conservation is one of the key concepts in nature.
 For fluid flow, it translates into a continuity equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boxed{\frac{\partial\rho}{\partial t}+\nabla\cdot\left(\rho\mathbf{u}\right)=0}\label{eq:rho_continuity}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For incompressible fluid density remains constant and Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rho_continuity"

\end_inset

 simplifies to
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boxed{\nabla\cdot\boldsymbol{u=}0}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection
Momentum equations
\end_layout

\begin_layout Standard
Similarly to mass, momentum must also be conserved.
 Momentum equation for fluid flow reads
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\rho\mathbf{u}}{\partial t}+\begin{alignedat}{1}\nabla\cdot\left(\rho\mathbf{uu}\right)=\mathbf{\nabla}\cdot\bm{\tau}-\nabla p+\mathbf{f}_{b}\end{alignedat}
\label{eq:NSmomentum}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where for Newtonian fluids the shear rate tensor is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{alignedat}{1}\bm{\tau} & =\mu\underbrace{\left(\nabla\mathbf{u}+\left(\nabla\mathbf{u}\right)^{T}\right)}_{2\mathbf{D}}+(-\frac{2}{3}\mu+\kappa)\left(\nabla\cdot\mathbf{u}\right)\mathbf{I}\\
 & =2\mu\mathbf{D}+(-\frac{2}{3}\mu+\kappa)\left(\nabla\cdot\mathbf{u}\right)\mathbf{I}
\end{alignedat}
\label{eq:tau}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $p$
\end_inset

, 
\begin_inset Formula $\mathbf{f}_{b}$
\end_inset

, 
\begin_inset Formula $\mu$
\end_inset

, 
\begin_inset Formula $\kappa$
\end_inset

, and 
\begin_inset Formula $\mathbf{D}$
\end_inset

 are, pressure, body force, dynamic viscosity, bulk viscosity, and strain-rate,
 respectively.
\end_layout

\begin_layout Standard
We usually leave the terms 
\begin_inset Formula $(-\frac{2}{3}\mu+\kappa)\left(\nabla\cdot\mathbf{u}\right)\mathbf{I}$
\end_inset

 out as they are small for most subsonic flows.
 For incompressible flows 
\begin_inset Formula $\nabla\cdot\mathbf{u}=0$
\end_inset

 and the terms a exactly zero.
 With these simplifications the momentum equation becomes
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boxed{\frac{\partial\rho\mathbf{u}}{\partial t}+\begin{alignedat}{1}\nabla\cdot\left(\rho\mathbf{uu}\right)=\mathbf{\nabla}\cdot\left(\mu\left(\nabla\mathbf{u}+\left(\nabla\mathbf{u}\right)^{T}\right)\right)-\nabla p+\mathbf{f}_{b}\end{alignedat}
}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For incompressible flow, this further simplifies to 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{u}}{\partial t}+\begin{alignedat}{1}\nabla\cdot\left(\boldsymbol{uu}\right)=\mathbf{\nabla}\cdot\left(\nu\left(\nabla\mathbf{u}\right)\right)-\frac{1}{\rho}\nabla p+\frac{\mathbf{f}_{b}}{\rho}\end{alignedat}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and with constant kinematic viscosity 
\begin_inset Formula $\nu=\mu/\rho$
\end_inset

 into 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boxed{\frac{\partial\mathbf{u}}{\partial t}+\begin{alignedat}{1}\nabla\cdot\left(\boldsymbol{uu}\right)=\mathbf{\nu\nabla^{2}}\boldsymbol{u}-\frac{1}{\rho}\nabla p+\frac{\mathbf{f}_{b}}{\rho}\end{alignedat}
}\label{eq:incompressibleConstantNuNS}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
or, in non-conservative form
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{u}}{\partial t}+\begin{alignedat}{1}\boldsymbol{u}\cdot\nabla\boldsymbol{u}=\mathbf{\nu\nabla^{2}}\boldsymbol{u}-\frac{1}{\rho}\nabla p+\frac{\mathbf{f}_{b}}{\rho}\end{alignedat}
\label{eq:incompressibleConstantNuNSNonConservative}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Note that there are great many slight variations of the momentum equations
 in the literature.
 Insignificant terms are often omitted without mention.
 Make certain you know which version you need!
\end_layout

\begin_layout Subsubsection
Energy equation
\end_layout

\begin_layout Standard
The energy equation states the energy conservation and reads
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\rho h}{\partial t}+\nabla\cdot(\rho\mathbf{u}h)+\frac{\partial\rho K}{\partial t}+\nabla\cdot(\rho\mathbf{u}K)-\frac{\partial p}{\partial t}=\nabla\cdot(\alpha\nabla h)+\nabla\cdot(\mathbf{\bm{\tau}\cdot u})+\rho r+\rho\mathbf{g}\cdot\mathbf{u}\label{eq:NSenergy}
\end{equation}

\end_inset

where 
\begin_inset Formula $h$
\end_inset

, 
\begin_inset Formula $K=\frac{1}{2}\mid\mathbf{u}\mid^{2}$
\end_inset

, 
\begin_inset Formula $\alpha,$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 are, specific enthalpy, specific kinetic energy, thermal diffusivity, and
 specific heat source, respectively.
\end_layout

\begin_layout Standard
The energy equation is almost always simplified considerably.
 A common form reads
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boxed{\frac{\partial\rho h}{\partial t}+\nabla\cdot(\rho\mathbf{u}h)=\nabla\cdot(\alpha\nabla h)+S_{h}+\rho\mathbf{g}\cdot\mathbf{u}}\label{eq:energy}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
From Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:energy"

\end_inset

 we can notice the similarity between the vector notation and the one dimensiona
l problem we solved before.
 The first term 
\begin_inset Formula $\frac{\partial\rho h}{\partial t}$
\end_inset

 describe the changes in time.
 The second term 
\begin_inset Formula $\nabla\cdot(\rho\mathbf{u}h)$
\end_inset

 describes advection.
 The third term 
\begin_inset Formula $\nabla\cdot(\alpha\nabla h)$
\end_inset

 is conduction and 
\begin_inset Formula $S_{h}$
\end_inset

 is heat source.
 The last term 
\begin_inset Formula $\rho\mathbf{g}\cdot\mathbf{u}$
\end_inset

 relates to work done against gravitation and is significant, for example,
 in natural convection.
\end_layout

\begin_layout Subsubsection
General transport equation
\end_layout

\begin_layout Standard
As can be seen from the previous equations, most of the transport equations
 have a very similar form.
 They have the time derivative term, advection term, diffusion term, and
 source term.
 It is often convenient to use a general transport equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boxed{\frac{\partial\rho\phi}{\partial t}+\nabla\cdot(\rho\mathbf{u}\phi)=\nabla\cdot(\Gamma\nabla\phi)+S_{\phi}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\phi$
\end_inset

 is the transported variable and 
\begin_inset Formula $\Gamma$
\end_inset

 is it's diffusion coefficient.
 General transport equation is most often used for passive scalars.
 A passive scalar is transported by the flow but does not affect the flow
 in any way.
 Examples of passive scalar use cases are small amounts of small particles
 or temperature.
\end_layout

\begin_layout Subsubsection
Equation of state
\end_layout

\begin_layout Standard
Equation of state is needed to link density, pressure, and temperature together.
 The most common equation of state is the ideal gas equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{alignedat}{1}pV & =NR_{u}T\\
\Leftrightarrow\rho & =\frac{p}{RT}
\end{alignedat}
\label{eq:state}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
but the equation of state naturally depends on the fluid.
\end_layout

\begin_layout Subsubsection
Fluid properties
\end_layout

\begin_layout Standard
If there are considerable temperature of pressure changes in the system,
 it is reasonable to expect significant changes in fluid properties.
 The most common fluid properties are the fluid viscosity 
\begin_inset Formula $\nu$
\end_inset

 or 
\begin_inset Formula $\mu$
\end_inset

 and heat diffusivity 
\begin_inset Formula $\alpha$
\end_inset

.
 If we are running a incompressible fluid simulation we also may need the
 density.
 
\end_layout

\begin_layout Standard
Even though fluid properties are readily available for common fluids and
 can be changed inside the program with minimal user interaction, it is
 usually good to avoid varying fluid properties if possible.
 If the changes are small and do not affect the results, they may still
 make the solution much slower.
 
\end_layout

\begin_layout Subsubsection
Additional physics
\end_layout

\begin_layout Standard
Great many addition can be made to the basic fluid flow problem considered
 here.
 Chemical reactions, multi component or phase flows, phase changes etc.
 are all readily added to the system.
 
\end_layout

\begin_layout Standard
Each layer of complication, however, adds to the computational cost.
 With complex systems it is also often hard to measure the accuracy of the
 model as there are so many parameters.
 It would be ideal to some how isolate or the parts of the simulation from
 each other for validation.
 In practice, this may be very difficult.
 It still a good practice to start as simple as possible.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Equation summary
\end_layout

\begin_layout Standard
Typical versions of the compressible and incompressible flow equations are
 summarized here.
 Make sure you understand the simplifications!
\end_layout

\begin_layout Subsubsection
Compressible flow
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\rho\mathbf{u}}{\partial t}+\begin{alignedat}{1}\nabla\cdot\left(\rho\mathbf{uu}\right)=\mathbf{\nabla}\cdot\left(\mu\left(\nabla\mathbf{u}+\left(\nabla\mathbf{u}\right)^{T}\right)\right)-\nabla p+\mathbf{f}_{b}\end{alignedat}
\label{eq:compMomentum}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\rho h}{\partial t}+\nabla\cdot(\rho\mathbf{u}h)=\nabla\cdot(\alpha\nabla h)+S_{h}+\rho\mathbf{g}\cdot\mathbf{u}\label{eq:compEnergy}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\rho}{\partial t}+\nabla\cdot\left(\rho\mathbf{u}\right)=0\label{eq:compConti}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\rho=\frac{p}{RT}\label{eq:compIDeal}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection
Incompressible flow
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{u}}{\partial t}+\begin{alignedat}{1}\nabla\cdot\left(\boldsymbol{uu}\right)=\mathbf{\nu\nabla^{2}}\boldsymbol{u}-\frac{1}{\rho}\nabla p+\frac{\mathbf{f}_{b}}{\rho}\end{alignedat}
\label{eq:incompMom}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\nabla\cdot\boldsymbol{u=}0\label{eq:incomCont}
\end{equation}

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Non-linear advection term
\end_layout

\begin_layout Standard
When comparing Eqs.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compMomentum"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:incomCont"

\end_inset

 and the advection-diffusion equations considered before, we notice a lot
 of familiar terms.
 
\end_layout

\begin_layout Standard
The energy equation, Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compEnergy"

\end_inset

, is the same equation as the one we have been dealing with in advection
 diffusion problems.
 Now it has just been written in vector form to allow three dimensions.
 We also have added the gravity related source term 
\begin_inset Formula $\rho\mathbf{g}\cdot\mathbf{u}$
\end_inset

.
\end_layout

\begin_layout Standard
The continuity equation, Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compConti"

\end_inset

, consists of a time derivative terms and a divergence term.
 Both are familiar from heat examples before.
 The equation of the state, Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compIDeal"

\end_inset

, is an algebraic equation and requires no special attention.
 
\end_layout

\begin_layout Standard
The differences arise from the non-linear advection term in momentum equations,
 Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compMomentum"

\end_inset

.
 Expect for the momentum advection term 
\begin_inset Formula $\nabla\cdot\left(\rho\mathbf{uu}\right)$
\end_inset

, all the terms in Eqs.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compMomentum"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:incomCont"

\end_inset

 are linear for constant fluid properties.
 
\end_layout

\begin_layout Standard
The way to tackle the non-linear advection terms is straight forward, we
 linearize it.
 The details vary, but the basic idea is always to replace one of the velocities
 
\begin_inset Formula $\boldsymbol{u}$
\end_inset

 with a known velocity 
\begin_inset Formula $\hat{\boldsymbol{u}}$
\end_inset

 from previous time step or iteration.
 The advection term becomes
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\nabla\cdot\left(\rho\mathbf{uu}\right)\approx\nabla\cdot\left(\underbrace{\rho\mathbf{\hat{u}}}_{\mathrm{advecting}}\overbrace{\boldsymbol{u}}^{\mathrm{advected}}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and after successful iteration process the two velocities are close enough.
 It is conventional to call the velocity 
\begin_inset Formula $\hat{\boldsymbol{u}}$
\end_inset

 advecting velocity and 
\begin_inset Formula $\boldsymbol{u}$
\end_inset

advected velocity.
 This convention arises from the analogy to general advection problem.
 
\end_layout

\begin_layout Standard
One important detail is that the advecting and advected velocities often
 need different discretization to produce a converging system.
 The advecting term is usually discretized with central differencing and
 the advected term with upwind or similar.
 
\end_layout

\begin_layout Standard
In most software packages there is only one discretization option for the
 advection term and this option means the discretization of the advected
 velocity.
 The advected term is often interpolated linearly and there might be a option
 called interpolation in the software package.
 Note that unless you are able to see the source code, details like these
 are often left untold.
 
\end_layout

\begin_layout Standard
Especially for the incompressible case, the advection term is often given
 in a non-conservative form 
\begin_inset Formula $\boldsymbol{u}\cdot\nabla\boldsymbol{u}$
\end_inset

.
 This form can be derived by using the product rule and continuity.
 Using the product rule, the time derivative and advection terms in momentum
 equation Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compMomentum"

\end_inset

 becomes
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{alignedat}{1}\frac{\partial\rho\mathbf{u}}{\partial t}+\begin{alignedat}{1}\nabla\cdot\left(\rho\mathbf{uu}\right)\end{alignedat}
 & =\underbrace{\rho\frac{\partial}{\partial t}\boldsymbol{u}+\boldsymbol{u}\frac{\partial}{\partial t}\rho}_{\mathrm{time\:derivative}}+\underbrace{\rho\boldsymbol{u}\cdot\nabla\boldsymbol{u}+\boldsymbol{u}\nabla\cdot\left(\rho\boldsymbol{u}\right)}_{\mathrm{advection}}\\
 & =\rho\left(\frac{\partial}{\partial t}\boldsymbol{u}+\boldsymbol{u}\cdot\nabla\boldsymbol{u}\right)+\boldsymbol{u}\underbrace{\left(\frac{\partial}{\partial t}\rho+\nabla\cdot\left(\rho\boldsymbol{u}\right)\right)}_{\mathrm{continuity=0}}\\
 & =\rho\left(\frac{\partial}{\partial t}\boldsymbol{u}+\boldsymbol{u}\cdot\nabla\boldsymbol{u}\right)
\end{alignedat}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
In this form, the linearization is usually done be taking the gradient from
 the known values as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{u}\cdot\nabla\boldsymbol{u}\approx\boldsymbol{u}\cdot\nabla\hat{\boldsymbol{u}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The practice of using interpolation for one of the terms 
\begin_inset Formula $\nabla\hat{\boldsymbol{u}}$
\end_inset

 and upwind like scheme for the other (
\begin_inset Formula $\boldsymbol{u}$
\end_inset

) might be easier to see from this form.
\end_layout

\begin_layout Subsection
Solution methods for compressible flow
\end_layout

\begin_layout Standard
Solving for compressible flow equations is more straight forward, even if
 not necessarily easier, that incompressible flow equations.
 We will first briefly discuss the compressible flow solution.
\end_layout

\begin_layout Standard
When solving for compressible flow with constant fluid properties like viscosity
, we usually have six equations to solve and six variables.
 Therefore the system is closed and can be solved.
 
\end_layout

\begin_layout Standard
In practice, however, the solution easily becomes unstable or does not converge.
 There is no single best way for solving the equations.
 Instead, there are many known ways that often work in certain kinds of
 problems.
 Consult manuals and scientific papers on how to choose the correct method.
\end_layout

\begin_layout Standard
Usually, the momentum equations, Eqs.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compMomentum"

\end_inset

, are solved for for velocities and the energy equation, Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compEnergy"

\end_inset

, for temperature.
 
\end_layout

\begin_layout Standard
The continuity equation can be solved directly for density.
 Then the solved temperature and density are used to solve for pressure
 using the equation of state.
 
\end_layout

\begin_layout Standard
It is, however, more common to solve the continuity equation for pressure
 in subsonic flows.
 This is often done using techniques similar to those used for incompressible
 flows.
 see Sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Solution-methods-for"

\end_inset

.
 
\end_layout

\begin_layout Standard
Supersonic or transient flows require special methods to remain stable.
 The pressure shocks form discontinuous jumps into the solution.
 The governing equations 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rho_continuity"

\end_inset

 - 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:state"

\end_inset

 are perfectly capable to describe compressible flow, but the solution is
 more difficult than for subsonic flows.
\end_layout

\begin_layout Subsection
Solution methods for incompressible flow
\begin_inset CommandInset label
LatexCommand label
name "subsec:Solution-methods-for"

\end_inset


\end_layout

\begin_layout Standard
It is often beneficial to solve the incompressible versions of flow equations.
 For low Mach number flows, the density changes are often small, and will
 not affect the flow much.
 
\end_layout

\begin_layout Standard
As the changes in density are small, the equations for density become stiff
 and hard to solve numerically.
 As a rule of the thump, the compressibility effect can be ignored if Mach
 number 
\begin_inset Formula $\mathrm{Ma}<0.3$
\end_inset

.
 This, of course, depends on the case.
 For example large temperature gradients may have significant effects on
 density.
\end_layout

\begin_layout Standard
Ignoring the fluid properties, we now have four equations and four unknown
 variables.
 The system is closed.
 The pressure, however, presents a problem.
 
\end_layout

\begin_layout Standard
Similarly to the compressible flow case, the momentum equations are used
 to solve for the velocities.
 After this we only have the continuity equation to use for pressure.
 With incompressible flow equation, however, the pressure is not present
 in the continuity equation.
 
\end_layout

\begin_layout Standard
The problem is usually solved by first solving the velocities from momentum
 equations with an old pressure field.
 This solution will not satisfy continuity.
\end_layout

\begin_layout Standard
The momentum equations are then substituted into the continuity equation.
 With suitable simplifications this yields a correction to pressure field
 and velocity field.
 The corrected fields will satisfy continuity.
\end_layout

\begin_layout Standard
The intuitive translation of the math is that, if too much material is flowing
 into a cell, increase the pressure.
 If too little material is flowing into a cell, decrease the pressure.
 And then fix the velocities accordingly.
 
\end_layout

\begin_layout Standard
The math operates on discretized equations and would take a long while to
 work through here.
 An explanation can be found, for example, from 
\shape italic
Versteeg and Malalasekara 2007, Chapter 6.4 
\begin_inset CommandInset citation
LatexCommand cite
key "versteeg2007"
literal "true"

\end_inset

.
 
\end_layout

\begin_layout Standard
The most common algorithm that operates in the explained manner is called
 SIMPLE.
 During the derivation of SIMPLE, some rather crude simplifications are
 made.
\end_layout

\begin_layout Standard
SIMPLER and SIMPLEC are very similar to SIMPLE but less simplification are
 made.
 This makes the SIMPLER and SIMPLEC more complicated and computationally
 expensive than SIMPLE, but also makes to usually converge in less steps.
 
\end_layout

\begin_layout Standard
PISO is another very similar algorithm to SIMPLE.
 PISO was originally developed for transient flows, but is often used for
 steady state solutions also.
\end_layout

\begin_layout Standard
All the methods should converge to the same values.
 The only differences are in derivation and convergence rates.
\end_layout

\begin_layout Standard
SIMPLE scheme and its relatives SIMPLEC and SIMPLER all require under relaxation
 to remain stable.
 Under relaxation is yet another word for linear interpolation.
 We interpolate the next solution from the newly calculated one, and the
 old solutions as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
u=\alpha u_{new}+\left(1-\alpha\right)u_{old}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\alpha$
\end_inset

 is the under relaxation and should be chosen between zero and unity.
 
\end_layout

\begin_layout Subsection
Pressure interpolation
\end_layout

\begin_layout Standard
In the momentum equations, we now have a new source terms, the pressure
 gradient, 
\begin_inset Formula $-\nabla p$
\end_inset

.
 This terms requires some special attention.
\end_layout

\begin_layout Standard
Historically, pressure decoupling was a major problem with fluid flow solutions.
 Pressure decoupling occurs when linear interpolation is used for pressure
 without any corrections.
 The decoupling is easily demonstrated with a simple example as shown in
 Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pressure-decouling"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/fluidFlow/decoupling.png
	lyxscale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pressure decoupling 
\begin_inset CommandInset label
LatexCommand label
name "fig:Pressure-decouling"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
With an oscillating pressure field with uniform mesh and 
\begin_inset Formula $p_{W}=p_{E}$
\end_inset

 the face pressures are interpolated equal and there will be no pressure
 source term 
\begin_inset Formula $-\nabla p$
\end_inset

.
\end_layout

\begin_layout Standard
There are two main strategies for tackling this problem.
 One is to use staggered grids, in which pressure and velocity is solved
 using different meshes.
 See Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Staggered-grid.-Scalar"

\end_inset

 for an example.
 
\end_layout

\begin_layout Standard
This method is accurate as it requires no interpolation of fields.
 On the other hand it is more complex and requires more memory for the two
 meshes.
 As far as the author aware, the PRESTO! scheme in FLUENT uses a staggered
 grid approach.
 Historically, staggered grid was very important.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/fluidFlow/Staggered_grid_schema.png
	lyxscale 20
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Staggered grid.
 Scalar variables on the left and vector variables on the right.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Staggered-grid.-Scalar"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wiki:staggered"
literal "true"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The second, and more common, method is to apply a correction to the linearly
 interpolated pressure.
 The most famous correction is the Rhie and Chow interpolation method.
 The correction remove the decoupling and smooth oscillating pressure fields.
 For details, see for example 
\begin_inset CommandInset citation
LatexCommand cite
key "rhieChowOpenFOAM"
literal "true"

\end_inset

.
\end_layout

\begin_layout Standard
The pressure velocity coupling and associated problems are the main reason
 we do not program our own fluid flow solver on this course.
 It is, however, possible to choose a practice case in which the pressure
 gradient is known or uniform.
 In this kind of problems the pressure-velocity coupling can be ignored.
 
\end_layout

\begin_layout Subsection
Boundary conditions
\end_layout

\begin_layout Standard
All the fields in the governing equations require boundary conditions.
 We will limit ourself to the incompressible case here and only talk about
 pressure and velocity boundary conditions.
 
\end_layout

\begin_layout Standard
There are great many different boundary conditions for different cases.
 We will only consider two primitive boundary condition, the fixed value
 and zero gradient, here.
 
\end_layout

\begin_layout Standard
Many more complicated boundary conditions are similar to at least one of
 these.
 For example, a constant mass flow boundary condition is very similar to
 fixed velocity boundary condition, but allows the velocity profile to develop
 into a more physically reasonable form.
 Unless you actually know the velocity profile, it is usually better to
 use a constant mass flow boundary condition to fixed velocity to avoid
 non-physical solution near the boundary.
\end_layout

\begin_layout Standard
One should never define a fixed value boundary condition for both the velocity
 and pressure at the same boundary.
 This combination is very unstable.
 
\end_layout

\begin_layout Standard
It is usually preferable to define fixed velocity, or similar, boundary
 condition to the upstream boundary.
 Information moves much faster downs stream in the flow and exploiting this
 results in faster convergence.
 Pressure information travels instantly in incompressible flow and very
 fast in compressible flow.
 
\end_layout

\begin_layout Standard
At least for the author, non-sense boundary conditions are the most common
 reason for crashing simulations.
 
\end_layout

\begin_layout Subsection
Coupled and segregated solvers
\end_layout

\begin_layout Standard
Most often, the governing equations are solved individually, in series.
 This is called a segregated solution.
 A segregated solution for a compressible flow problem would be something
 like the following
\end_layout

\begin_layout Enumerate
Solve linearized x-momentum equation for 
\begin_inset Formula $u$
\end_inset

.
 
\begin_inset Formula $A_{u}u=b_{u}$
\end_inset


\end_layout

\begin_layout Enumerate
Solve linearized y-momentum equation for 
\begin_inset Formula $v$
\end_inset

.
 
\begin_inset Formula $A_{v}v=b_{v}$
\end_inset


\end_layout

\begin_layout Enumerate
Solve linearized z-momentum equation for 
\begin_inset Formula $w$
\end_inset

.
 
\begin_inset Formula $A_{w}u=b_{w}$
\end_inset


\end_layout

\begin_layout Enumerate
Solve energy equation for 
\begin_inset Formula $T$
\end_inset

.
 
\begin_inset Formula $A_{T}T=b_{T}$
\end_inset


\end_layout

\begin_layout Enumerate
Solve continuity equation for 
\begin_inset Formula $\rho$
\end_inset

.
 
\begin_inset Formula $A_{\rho}\rho=b_{\rho}$
\end_inset


\end_layout

\begin_layout Enumerate
Solve pressure from equation of state.
\end_layout

\begin_layout Enumerate
Repeat steps 1-6 until convergence is reached.
\end_layout

\begin_layout Standard
The iteration typically takes a lot of steps unless a very good initial
 guess is available.
 If we are solving a transient case, the previous time step serves as a
 good initial guess and the iteration is much faster.
\end_layout

\begin_layout Standard
It is also possible to combine all or some of the solution steps into a
 single step.
 If we were, for example, to solve all the velocity components, the temperature
 and the density in a single step the resulting linear system would be similar
 to (not complete)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{bmatrix}\left[A_{u}\right]\\
 & \left[A_{y}\right]\\
 &  & \left[A_{w}\right]\\
 &  &  & \left[A_{T}\right]\\
 &  &  &  & \left[A_{\rho}\right]
\end{bmatrix}\begin{bmatrix}\left[u\right]\\
\left[v\right]\\
\left[w\right]\\
\left[T\right]\\
\left[\rho\right]
\end{bmatrix}=\begin{bmatrix}\left[b_{u}\right]\\
\left[b_{v}\right]\\
\left[b_{w}\right]\\
\left[b_{T}\right]\\
\left[b_{\rho}\right]
\end{bmatrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where each term inside [] is a matrix or vector similar to that in the segregate
d solution.
 Note that now there would be also extra coefficients linking, for example
 velocity x-component to all the other velocities and pressure.
 
\series bold
These extra terms are not shown in the matrix above.

\series default
 
\end_layout

\begin_layout Standard
The resulting system is much larger than the ones used in segregated solution.
 It requires more memory and takes longer to solve.
 Depending on the problem, a coupled solution 
\shape italic
may
\shape default
 be much faster than segregated one.
 Or not.
 Again, the correct choice depends on the case.
\end_layout

\begin_layout Subsection
Parallel solvers
\end_layout

\begin_layout Standard
In modern computational fluid dynamics, we often solve very large systems.
 Some vary basic understanding on parallel computation is in order.
\end_layout

\begin_layout Standard
Different solvers operate differently, and the following mostly mostly considers
 OpenFOAM.
 Other finite volume method based solvers are probably similar.
\end_layout

\begin_layout Standard
Parallelization of the linear systems solvers is difficult and usually not
 done.
 Parallelization is done on the mesh level by dividing the mesh into parts.
 Each part is then solved separately, in separate matrices, on different
 cores.
 The mesh interfaces between mesh parts is handled with interfaces similar
 to boundary conditions.
\end_layout

\begin_layout Standard
The parallelization at mesh level provides a very simple and effective paralleli
zation in large systems.
 If you use OpenFOAM to solve a large system with 100 cores, it will solve
 it near 100 faster than only using one core.
 The key word, however, is 
\shape italic
large
\shape default
.
 
\end_layout

\begin_layout Standard
In order for information to flow from one mesh part to another, there must
 be communication between the parts.
 If there are a lot of parts in a small system, there will be a lot of communica
tion compared to the actual computation.
 This communication can choke the solver.
 Therefore, it is not reasonable to always use as many cores as available.
 
\end_layout

\begin_layout Standard
It is not possible to know how how a certain case parallelizes without testing.
 As a rule of the thump, each core should have at least 50000 cells.
 Note that this number may be orders of magnitudes off in some cases.
\end_layout

\begin_layout Standard
Other parallelization methods also exists.
\end_layout

\begin_layout Standard
The previous analysis only applies to parallelization in space.
 In time, parallelization is not of much use.
 The previous time step must be known before we can proceed to the next
 one.
\end_layout

\end_body
\end_document
